--  description: Create ORDER trigger 
CREATE TRIGGER OCPDT.ORDEREJB_TRIGGER 
	AFTER INSERT OR DELETE OR UPDATE ON OCPDT.ORDEREJB 
	REFERENCING OLD AS O 
	NEW AS N 
	FOR EACH ROW 
	MODE DB2SQL 
	SET OPTION  ALWBLK = *ALLREAD , 
	ALWCPYDTA = *OPTIMIZE , 
	COMMIT = *ALL , 
	DECRESULT = (31, 31, 00) , 
	DFTRDBCOL = OCPDT , 
	DYNDFTCOL = *NO , 
	DYNUSRPRF = *USER , 
	SRTSEQ = *HEX   
	WHEN ( INSERTING OR UPDATING OR DELETING )
 BEGIN ATOMIC 
DECLARE OPERATION VARCHAR ( 10 ) FOR SBCS DATA ; 
IF INSERTING THEN 
SET SQLP_L3 . OPERATION = 'INSERT' ; 
END IF ; 
IF DELETING THEN 
SET SQLP_L3 . OPERATION = 'DELETE' ; 
END IF ; 
IF UPDATING THEN 
SET SQLP_L3 . OPERATION = 'UPDATE' ; 
END IF ; 
IF ( INSERTING OR UPDATING ) THEN 
SET OCPDT . DQ_ORDER = JSON_OBJECT ( 
KEY 'table' VALUE 'orders' , KEY 'operation' VALUE SQLP_L3 . OPERATION , 
KEY 'row' VALUE JSON_OBJECT ( 
KEY 'order_fee' VALUE N . ORDERFEE , 
KEY 'timestamp' VALUE CURRENT_TIMESTAMP , 
KEY 'completion_date' VALUE N . COMPLETIONDATE , 
KEY 'order_type' VALUE N . ORDERTYPE , 
KEY 'order_status' VALUE N . ORDERSTATUS , 
KEY 'price' VALUE N . PRICE , 
KEY 'quantity' VALUE N . QUANTITY , 
KEY 'open_date' VALUE N . OPENDATE , 
KEY 'order_id' VALUE N . ORDERID , 
KEY 'account_id' VALUE N . ACCOUNT_ACCOUNTID , 
KEY 'quote_symbol' VALUE N . QUOTE_SYMBOL , 
KEY 'holding_id' VALUE N . HOLDING_HOLDINGID 
) 
) ; 
ELSE SET OCPDT . DQ_ORDER = JSON_OBJECT ( 
KEY 'table' VALUE 'orders' , KEY 'operation' VALUE SQLP_L3 . OPERATION , 
KEY 'row' VALUE JSON_OBJECT ( 
KEY 'order_fee' VALUE O . ORDERFEE , 
KEY 'timestamp' VALUE CURRENT_TIMESTAMP , 
KEY 'completion_date' VALUE O . COMPLETIONDATE , 
KEY 'order_type' VALUE O . ORDERTYPE , 
KEY 'order_status' VALUE O . ORDERSTATUS , 
KEY 'price' VALUE O . PRICE , 
KEY 'quantity' VALUE O . QUANTITY , 
KEY 'open_date' VALUE O . OPENDATE , 
KEY 'order_id' VALUE O . ORDERID , KEY 'account_id' VALUE O . ACCOUNT_ACCOUNTID , 
KEY 'quote_symbol' VALUE O . QUOTE_SYMBOL , 
KEY 'holding_id' VALUE O . HOLDING_HOLDINGID 
) 
) ; 
END IF ; 
CALL QSYS2 . SEND_DATA_QUEUE_UTF8 ( 
MESSAGE_DATA => OCPDT . DQ_ORDER , 
DATA_QUEUE => 'AI' , 
DATA_QUEUE_LIBRARY => 'OCPDT' 
) ; 
END  ; 
  
